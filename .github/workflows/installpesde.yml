on:
  workflow_call:
    inputs:
      version:
        type: "string"
        required: false
      cache:
        type: "string"
        default: "false"
        required: false
      token:
        type: "string"
        required: false
      path:
        type: "string"
        default: "."
        required: false

jobs:
  install-pesde:
    runs-on: ubuntu-latest
    steps:
      - name: Download releases
        shell: bash
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          case ${{ runner.arch }} in
            "X86" | "X64") fileArch="x86_64" ;;
            "ARM" | "ARM64") fileArch="aarch64" ;;
          esac

          case ${{ runner.os }} in
            Linux) pattern="*-linux-$fileArch.zip" ;;
            macOS) pattern="*-macos-$fileArch.zip" ;;
            Windows) pattern="*-windows-$fileArch.zip" ;;
          esac

          gh release download ${{ inputs.version }} -R pesde-pkg/pesde -p "$pattern"

      - name: Install releases
        shell: bash
        run: |
          mv pesde*.zip pesde.zip
          unzip pesde.zip
          chmod +x pesde

          ./pesde self-install

      - name: Add bins to PATH
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          echo "$HOME/.pesde/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Add bins to PATH
        if: runner.os != 'Windows'
        shell: bash
        run: |
          echo -e "$HOME/.pesde/bin" >> $GITHUB_PATH

      - name: Remove artifacts
        shell: bash
        run: |
          rm pesde.zip
          if ${{ runner.os == 'Windows' }}; then
            rm pesde.exe
          else
            rm pesde
          fi

      - name: Cache Pesde
        if: ${{ inputs.cache == true || inputs.cache == 'true' }}
        uses: actions/cache@v4
        with:
          path: |
            ~/.pesde
          key: ${{ runner.os }}-pesde-${{hashFiles(format('{0}/{1}', inputs.path, 'pesde.toml'))}}

      - name: Authenticate with Pesde
        if: inputs.token != ''
        shell: bash
        run: pesde auth login --token "${{ inputs.token }}"
